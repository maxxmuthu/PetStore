trigger:
- main  # Define the branch to trigger on, e.g., 'main', 'master'

pool:
  vmImage: 'ubuntu-latest'  # Choose an appropriate VM image

variables:
  TEST_RAIL_USERNAME: ''
  TEST_RAIL_PASSWORD: ''
  JIRA_USERNAME: ''
  JIRA_API_TOKEN: ''

stages:
- stage: Checkout
  jobs:
  - job: Checkout
    steps:
    - checkout: self
    - checkout: git://maxxmuthu/PetStore@main  # Replace with your actual GitHub repository URL

- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'  # Specify the Java version to use, adjust as needed
        jdkArchitectureOption: 'x64'  # Specify the JDK architecture

    - script: |
        mvn clean compile
        mvn test -Dsurefire.suiteXmlFiles=testng.xml
      displayName: 'Build and Test'

    - script: |
        echo "##vso[task.setvariable variable=JIRA_USERNAME;issecret=false;isOutput=true]$(JIRA_USERNAME)"
        echo "##vso[task.setvariable variable=JIRA_API_TOKEN;issecret=true;isOutput=true]$(JIRA_API_TOKEN)"
        echo "##vso[task.setvariable variable=TEST_RAIL_USERNAME;issecret=false;isOutput=true]$(TEST_RAIL_USERNAME)"
        echo "##vso[task.setvariable variable=TEST_RAIL_PASSWORD;issecret=true;isOutput=true]$(TEST_RAIL_PASSWORD)"
      displayName: 'Set pipeline variables'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: 'test-output'
        artifactName: 'Extent Reports'
        publishLocation: 'Container'

- stage: Cleanup
  jobs:
  - job: Cleanup
    steps:
    - script: |
        cleanWs
      displayName: 'Clean up workspace'